name: Mongoose Shelly build
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
      - '!v*-norelease'
jobs:
  release:
    name: Create a new release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_version: ${{ steps.read_version.outputs.version }}
    steps:
    - name: Read Version
      id: read_version
      run: |
        echo ::set-output name=version::${GITHUB_REF#refs/*/}
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ steps.read_version.outputs.version }}
        release_name: Release ${{ steps.read_version.outputs.version }}
        draft: false
        prerelease: false
  build:
    name: Build for different Shelly models
    needs: release
    strategy:
      matrix:
        hwModel:    [Shelly1, Shelly1PM, ShellyPlugS, ShellyPlug2, ShellyUni, Shelly2, Shelly25, ShellyRGBW2, ShellyDimmer1, ShellyDimmer2, ShellyEM, ShellyBulb, ShellyVintage, ShellyPlugUS, ShellyHT, ShellyDuo, ShellyI3, Shelly1L, ShellyDuoRGBW]
        hwPlatform: [esp8266]
        targetFw:   [tasmota, haa, espurna]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      id: checkout_code
    - name: Build firmware
      uses: yaourdt/mongoose-os-action@v1.0.2
      with:
        mos-yml-path: .
        platform: ${{ matrix.hwPlatform }}
        build-var: MODEL=${{ matrix.hwModel }} --build-var TARGETFW=${{ matrix.targetFw }}
      id: mos_build
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      id: upload-release-asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./build/fw.zip
        asset_name: mg2${{ matrix.targetFw }}-${{ matrix.hwModel }}.zip
        asset_content_type: application/zip
    - name: Upload to CF KV Store
      uses: wei/curl@master
      with:
        args: "-X PUT 'https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/storage/kv/namespaces/${{ secrets.CF_KV_NAMESPACE_ID }}/values/firmware/mg2${{ matrix.targetFw }}-${{ matrix.hwModel }}.zip' -H 'Authorization: Bearer ${{ secrets.CF_API_TOKEN }}' --data-binary '@./build/fw.zip'"
